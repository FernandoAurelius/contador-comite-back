name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: receita
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: Run tests
        run: mvn test
        env:
          SPRING_PROFILES_ACTIVE: test
        
      - name: Build Docker image
        run: docker build -t contador-receita-back .
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Push Docker image
        run: |
          docker tag contador-receita-back ${{ secrets.DOCKERHUB_USERNAME }}/contador-receita-back:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/contador-receita-back:latest

  deploy-oracle:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to Oracle Cloud VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ORACLE_VPS_HOST }}
        username: ${{ secrets.ORACLE_VPS_USERNAME }}
        key: ${{ secrets.ORACLE_VPS_PRIVATE_KEY }}
        port: ${{ secrets.ORACLE_VPS_SSH_PORT }}
        script: |
          # Parar e remover o container existente, caso exista
          sudo docker stop contador-app || true
          sudo docker rm contador-app || true
          
          # Forçar o download da imagem mais recente
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/contador-receita-back:latest
          
          # Executar o novo container com as configurações de ambiente adequadas
          sudo docker run -d --name contador-app \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e API_SECURITY_TOKEN_SECRET="${{ secrets.API_SECURITY_TOKEN }}" \
            -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/contador-receita-back:latest
          
          # Verificar se o container está rodando
          sleep 10
          sudo docker ps
          
          # Verificar logs se o container não estiver rodando
          if ! sudo docker ps | grep contador-app; then
            echo "Container falhou ao iniciar. Verificando logs:"
            sudo docker logs contador-app
            exit 1
          fi